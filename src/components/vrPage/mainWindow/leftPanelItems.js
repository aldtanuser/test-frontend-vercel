// Ensure the ID is unique
export const initialElements = [
  {
    id: "0",
    type: "input",
    label: "VR Scene",
    class: "vue-flow__node-scene default-color-cat-1",
    leftPanelCategory: "default", // This property is used to categorize on frontend view
    formType: "scene-scene",
    descriptionType: "scene-scene",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "This node can be used to modify properties of the main VR scene and adjust preview window settings.",
      id: "",
      type: "scene", // Name of the A-Frame Component
      category: "scene",
      properties: {
        id: "scene",
        "loading-screen-dots-color": "#163d4e",
        "loading-screen-background-color": "#fff",
        "right-a-button-pressed": "",
        "cursor-ray-origin": "mouse",
        "hand-controls-type": "super-hand",
        "hand-controls-color": "#b4b7d0",
      },
    },
  },
  {
    id: "4",
    type: "output",
    label: "Sky",
    class: "vue-flow__node-bobject environment-color-cat-1",
    leftPanelCategory: "environment",
    formType: "sky-env",
    descriptionType: "sky-env",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "This node sets the sky environment. Customize the sky color using the properties below.",
      id: "mySky",
      type: "sky",
      category: "env",
      properties: { id: "2", src: "", color: "#ff00ff" },
    },
  },
  {
    id: "4",
    type: "output",
    label: "Plane",
    class: "vue-flow__node-bobject environment-color-cat-2",
    leftPanelCategory: "environment",
    formType: "add-plane-component",
    descriptionType: "add-plane-component",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "This node adds a plane component. Customize its color, size, rotation, and position below.",
      id: "add-plane",
      type: "add-plane",
      category: "component",
      properties: {
        id: "add-plane",
        color: "#1B1F93",
        width: 1,
        height: 2,
        rotation: "0 45 0",
        position: "0 1 -3",
        repeat: "",
      },
    },
  },
  {
    id: "4",
    type: "output",
    label: "Wall",
    class: "vue-flow__node-bobject environment-color-cat-2",
    leftPanelCategory: "environment",
    formType: "add-wall-component",
    descriptionType: "add-wall-component",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "This node adds a wall component. Customize its color, size, rotation, and position below.",
      id: "add-wall",
      type: "add-wall",
      category: "component",
      properties: {
        id: "add-wall",
        color: "#CCCCCC",
        width: 3,
        height: 2,
        rotationValue: 45,
        position: "0 1 -5",
        repeat: "",
        src: "#",
      },
    },
  },
  {
    id: "4",
    type: "output",
    label: "Floor",
    class: "vue-flow__node-bobject environment-color-cat-2",
    leftPanelCategory: "environment",
    formType: "add-floor-component",
    descriptionType: "add-floor-component",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "This node adds a floor component. Customize its color, size, rotation, and position below.",
      id: "add-floor",
      type: "add-floor",
      category: "component",
      properties: {
        id: "add-floor",
        color: "#CCCCCC",
        width: 3,
        height: 3,
        rotationValue: 45,
        position: "0 0 -5",
        repeat: "",
        src: "#",
      },
    },
  },
  {
    id: "1",
    type: "output",
    label: "Light",
    class: "vue-flow__node-setup equipments-color-cat-1",
    leftPanelCategory: "equipments",
    formType: "add-light-component",
    descriptionType: "add-light-component",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "This node adds a light for the scene. Customize its type, intensity, color, position, and rotation below.",
      id: "add-light",
      type: "add-light",
      category: "component",
      properties: {
        type: "ambient",
        intensity: "1",
        color: "#ffffff",
        position: "-1 2 3",
        rotation: "0 0 0",
        side: "-0.5 1 1",
      },
    },
  },
  // {
  //   id: "1",
  //   type: "output",
  //   label: "Light",
  //   class: "vue-flow__node-setup",
  //   leftPanelCategory: "equipments",
  //   formType: "light-setup",
  //   descriptionType: "light-setup",
  //   deletable: true,
  //   position: {
  //     x: 250,
  //     y: 150,
  //   },
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "",
  //     type: "setup",
  //     category: "setup",
  //     properties: {
  //       type: "ambient",
  //       intensity: "1",
  //       color: "#ffffff",
  //       position: "-0.5 1 1",
  //     },
  //   },
  // },
  {
    id: "1",
    type: "output",
    label: "Camera",
    class: "vue-flow__node-setup equipments-color-cat-2",
    leftPanelCategory: "equipments",
    formType: "camera-scene",
    descriptionType: "camera-scene",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "This node sets up a camera for the scene. Customize its far, fov, near, position, and look-controls-enabled below.",
      id: "",
      type: "camera",
      category: "scene",
      properties: {
        "static-body": "",
        id: "camera",
        position: "0.5 1.6 0",
        far: 10000,
        fov: 80,
        near: "",
        "look-controls-enabled": true,
      },
    },
  },
  {
    id: "2",
    type: "input",
    label: "Image Upload",
    class: "vue-flow__node-asset multimedia-color-cat-1",
    leftPanelCategory: "multimedia",
    formType: "image-asset",
    descriptionType: "image-asset",
    position: {
      x: 0,
      y: 50,
    },
    data: {
      description: "Use this node to upload an image asset.",
      id: "id",
      type: "img",
      category: "asset",
      properties: { id: "id", name: "Image1", src: "" },
    },
  },
  {
    id: "15",
    type: "output",
    label: "Image Frame",
    class: "vue-flow__node-gui multimedia-color-cat-2",
    leftPanelCategory: "multimedia",
    formType: "photo-frame-component",
    descriptionType: "photo-frame-component",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to display an uploaded image on the scene. You can customize the properties below.",
      id: "photo-frame",
      type: "photo-frame",
      category: "component",
      properties: {
        id: "photo-frame",
        name: "ImageFrame1",
        frameColor: "black",
        borderColor: "gray",
        decorationColor: "#5c6962",
        position: "-0.157 5.745 4.889",
        rotation: "5 220 40",
        src: "",
      },
    },
  },
  {
    id: "2",
    type: "input",
    label: "Video Upload",
    class: "vue-flow__node-asset multimedia-color-cat-1",
    leftPanelCategory: "multimedia",
    formType: "video-asset",
    descriptionType: "video-asset",
    position: {
      x: 0,
      y: 50,
    },
    data: {
      description: "Use this node to upload a video asset.",
      id: "id",
      type: "video",
      category: "asset",
      properties: { id: "id", name: "Video1", src: "" },
    },
  },
  {
    id: "15",
    type: "output",
    label: "Video Player",
    class: "vue-flow__node-gui multimedia-color-cat-2",
    leftPanelCategory: "multimedia",
    formType: "video-controller-component",
    descriptionType: "video-controller-component",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to play a video on the scene. You can customize the player properties below.",
      id: "video-controls",
      type: "video-controls",
      category: "component",
      properties: {
        id: "video-controls",
        name: "VideoPlayer1",
        width: "4",
        height: "2.25",
        position: "-5.045 1.5 -4",
        rotation: "0 60 0",
        src: "",
      },
    },
  },
  {
    id: "2",
    type: "input",
    label: "Audio Upload",
    class: "vue-flow__node-asset multimedia-color-cat-1",
    leftPanelCategory: "multimedia",
    formType: "sound-asset",
    descriptionType: "sound-asset",
    position: {
      x: 0,
      y: 50,
    },
    data: {
      description: "Use this node to upload a audio asset.",
      id: "id",
      type: "sound",
      category: "asset",
      properties: { id: "id", name: "Audio1", src: "" },
    },
  },
  {
    id: "15",
    type: "output",
    label: "Audio Player",
    class: "vue-flow__node-gui multimedia-color-cat-2",
    leftPanelCategory: "multimedia",
    formType: "audio-controls-component",
    descriptionType: "audio-controls-component",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to play an audio on the scene. You can customize the play button properties below.",
      id: "audio-controls",
      type: "audio-controls",
      category: "component",
      properties: {
        id: "audio-controls",
        name: "AudioPlayer1",
        autoplay: false,
        loop: false,
        position: "0 2 -3",
        color: "green",
        src: "",
      },
    },
  },
  {
    id: "2",
    type: "input",
    label: "Text",
    class: "vue-flow__node-asset multimedia-color-cat-3",
    leftPanelCategory: "multimedia",
    formType: "add-text-component",
    descriptionType: "add-text-component",
    position: {
      x: 0,
      y: 50,
    },
    data: {
      description:
        "Use this node to add text to the scene. Customize the properties below.",
      id: "add-text",
      type: "add-text",
      category: "component",
      properties: {
        id: "id",
        name: "Text1",
        src: "",
        text: "Hello World",
        color: "#000",
        position: "0 2 -3",
        size: 3,
      },
    },
  },
  {
    id: "2",
    type: "input",
    label: "Link",
    class: "vue-flow__node-asset multimedia-color-cat-3",
    leftPanelCategory: "multimedia",
    formType: "add-link-component",
    descriptionType: "add-link-component",
    position: {
      x: 0,
      y: 50,
    },
    data: {
      description:
        "Use this node to add a clickable link to the scene. Customize the properties below.",
      id: "id",
      type: "add-link",
      category: "component",
      properties: {
        id: "id",
        name: "Link1",
        href: "https://www.example.com",
        text: "Go to Example",
        color: "#04fa00",
        position: "0 1 -3",
        rotation: "0 0 0",
        scale: "2 2 2",
        src: "",
      },
    },
  },
  // {
  //   id: "2",
  //   type: "input",
  //   label: "Link",
  //   class: "vue-flow__node-asset",
  //   leftPanelCategory: "multimedia",
  //   formType: "link-asset",
  //   descriptionType: "link-asset",
  //   position: {
  //     x: 0,
  //     y: 50,
  //   },
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "id",
  //     type: "link",
  //     category: "asset",
  //     properties: { id: "id", name: "Model1", src: "", link: "" },
  //   },
  // },
  {
    id: "2",
    type: "input",
    label: "3D model Upload",
    class: "vue-flow__node-asset three-d-models-color-cat-1",
    leftPanelCategory: "3D-models",
    formType: "gltf-model-asset",
    descriptionType: "gltf-model-asset",
    position: {
      x: 0,
      y: 50,
    },
    data: {
      description: "Use this node to upload a 3D model asset.",
      id: "id",
      type: "gltf-model",
      category: "asset",
      properties: { id: "id", name: "Model1", src: "" },
    },
  },
  {
    id: "3",
    type: "default",
    label: "GLTF Model",
    class: "vue-flow__node-object three-d-models-color-cat-2",
    leftPanelCategory: "3D-models",
    formType: "gltf-model-object",
    descriptionType: "gltf-model-object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a uploaded 3D model to the scene. Customize the properties below.",
      id: "id",
      type: "gltf-model",
      category: "object",
      properties: {
        id: "2",
        name: "objectName",
        src: "",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Box",
    class: "vue-flow__node-object three-d-geometries-color-cat-1",
    leftPanelCategory: "3D-geometries",
    formType: "box-object",
    descriptionType: "box-object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a 3D box to the scene. Customize the properties below.",
      id: "id",
      type: "Box",
      category: "object",
      properties: {
        id: "2",
        name: "boxName",
        src: "",
        position: "0 0.5 -1",
        color: "#ff3333",
        height: "1",
        width: "1",
        depth: "1",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Cylinder",
    class: "vue-flow__node-object three-d-geometries-color-cat-1",
    leftPanelCategory: "3D-geometries",
    formType: "cylinder-object",
    descriptionType: "cylinder-object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a 3D cylinder to the scene. Customize the properties below.",
      id: "id",
      type: "Cylinder",
      category: "object",
      properties: {
        id: "2",
        name: "cylinderName",
        src: "",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Cone",
    class: "vue-flow__node-object three-d-geometries-color-cat-1",
    leftPanelCategory: "3D-geometries",
    formType: "cone-object",
    descriptionType: "cone-object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a 3D cylinder to the scene. Customize the properties below.",
      id: "id",
      type: "Cone",
      category: "object",
      properties: {
        id: "2",
        name: "coneName",
        src: "",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Tetrahedron",
    class: "vue-flow__node-object three-d-geometries-color-cat-1",
    leftPanelCategory: "3D-geometries",
    formType: "tetrahedron-object",
    descriptionType: "tetrahedron-object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a 3D tetrahedron to the scene. Customize the properties below.",
      id: "id",
      type: "Tetrahedron",
      category: "object",
      properties: {
        id: "2",
        name: "tetrahedronName",
        src: "",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Sphere",
    class: "vue-flow__node-object three-d-geometries-color-cat-1",
    leftPanelCategory: "3D-geometries",
    formType: "sphere-object",
    descriptionType: "sphere-object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a 3D sphere to the scene. Customize the properties below.",
      id: "id",
      type: "Sphere",
      category: "object",
      properties: {
        id: "2",
        name: "sphereName",
        src: "",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Others",
    class: "vue-flow__node-object three-d-geometries-color-cat-2",
    leftPanelCategory: "3D-geometries",
    formType: "object",
    descriptionType: "object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add various 3D objects to the scene, such as Dodecahedron, Octahedron, Icosahedron, Ring, Torus, and TorusKnot. Customize the properties below.",
      id: "id",
      type: "others",
      category: "object",
      properties: {
        id: "2",
        name: "objectName",
        src: "",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Circle",
    class: "vue-flow__node-object two-d-geometries-color-cat-1",
    leftPanelCategory: "2D-geometries",
    formType: "circle-object",
    descriptionType: "circle-object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a 2D circle to the scene. Customize the properties below.",
      id: "id",
      type: "Circle",
      category: "object",
      properties: {
        id: "2",
        name: "circleName",
        src: "",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Line",
    class: "vue-flow__node-object two-d-geometries-color-cat-1",
    leftPanelCategory: "2D-geometries",
    formType: "line-component",
    descriptionType: "line-component",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a 2D line to the scene. Customize the properties below.",
      id: "line",
      type: "line",
      category: "component",
      properties: {
        id: "line",
        start: "0 0 0",
        end: "1 1 1",
        color: "#FF0000",
        opacity: "1",
        visible: "true",
        name: "lineName",
        src: "",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  {
    id: "3",
    type: "default",
    label: "Triangle",
    class: "vue-flow__node-object two-d-geometries-color-cat-1",
    leftPanelCategory: "2D-geometries",
    formType: "triangle-object",
    descriptionType: "triangle-object",
    deletable: true,
    position: {
      x: 250,
      y: 150,
    },
    data: {
      description:
        "Use this node to add a 2D triangle to the scene. Customize the properties below.",
      id: "id",
      type: "Triangle",
      category: "object",
      properties: {
        id: "2",
        name: "triangleName",
        src: "",
        side: "double",
        "mouse-draganddrop": "",
        grabbable: "",
      },
    },
  },
  // {
  //   id: "4",
  //   type: "output",
  //   label: "Image Frame",
  //   class: "vue-flow__node-bobject",
  //   leftPanelCategory: "environment",
  //   formType: "image-frame-env",
  //   descriptionType: "image-frame-env",
  //   deletable: true,
  //   position: {
  //     x: 250,
  //     y: 150,
  //   },
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "mySky",
  //     type: "sky",
  //     category: "env",
  //     properties: { id: "2", src: "", color: "#ff00ff" },
  //   },
  // },
  // {
  //   id: "4",
  //   type: "output",
  //   label: "Video Player",
  //   class: "vue-flow__node-bobject",
  //   leftPanelCategory: "environment",
  //   formType: "video-player-env",
  //   descriptionType: "video-player-env",
  //   deletable: true,
  //   position: {
  //     x: 250,
  //     y: 150,
  //   },
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "mySky",
  //     type: "sky",
  //     category: "env",
  //     properties: { id: "2", src: "", color: "#ff00ff" },
  //   },
  // },
  {
    id: "5",
    type: "output",
    label: "Default Animation",
    class: "vue-flow__node-animation functions-color-cat-1",
    leftPanelCategory: "functions",
    formType: "animation-function",
    descriptionType: "animation-function",
    deletable: true,
    data: {
      description:
        "Use this node to apply a default animation to an object in the scene. Choose between rotation or position animation types and customize the properties below.",
      id: "id",
      type: "animation",
      category: "function",
      properties: {
        property: "rotation",
        to: "0 0 0",
        loop: "true",
        dur: "7500",
      },
    },
  },
  {
    id: "5",
    type: "output",
    label: "Animation Types",
    class: "vue-flow__node-animation functions-color-cat-1",
    leftPanelCategory: "functions",
    formType: "animation-type-function",
    descriptionType: "animation-type-function",
    deletable: true,
    data: {
      description:
        "Use this node to apply various animation types to an object in the scene. Available types: Translate, Spin, Transrotation, and Orbit. Customize the animation properties below.",
      id: "id",
      type: "translate-animation",
      category: "function",
      properties: {
        property: "rotation",
        to: "0 0 0",
        loop: "true",
        dur: "7500",
      },
    },
  },
  {
    id: "5",
    type: "output",
    label: "Instructional Text",
    class: "vue-flow__node-animation functions-color-cat-2",
    leftPanelCategory: "functions",
    formType: "instructional-text-function",
    descriptionType: "instructional-text-function",
    deletable: true,
    data: {
      description:
        "Display instructional text at a specific distance and position. Customize text, position, and rotation.",
      id: "id",
      type: "instructional-text",
      category: "function",
      properties: {
        distance: "5",
        text: "Hello Wolrd",
        path: "",
        position: "0 2 0",
        textPosition: "0 0 0",
        textRotation: "0 0 0",
        textScale: "0.5 0.5 0.5",
        textColor: "#000",
        modelPosition: "0 0 0",
        modelRotation: "0 0 0",
        modelScale: "0.5 0.5 0.5",
        modelAnimationProperty: "rotation",
        modelAnimationFill: "forwards",
        modelAnimationTo: "0 -360 -90",
        modelAnimationLoop: "true",
        modelAnimationDur: 10,
        modelAnimationRepeat: "indefinite",
      },
    },
  },
  {
    id: "11",
    type: "input",
    label: "Buttons",
    class: "vue-flow__node-gui gui-components-color-cat-1",
    leftPanelCategory: "GUI Components",
    formType: "gui-buttons-component",
    descriptionType: "gui-buttons-component",
    deletable: true,
    data: {
      description:
        "Add a GUI button to the scene. Customize text, colors, size, position.",
      id: "buttonsId",
      type: "gui-buttons",
      category: "component",
      properties: {
        text: "Start",
        color: "#E9EAEC",
        textColor: "#333652",
        borderColor: "#333652",
        width: 2,
        height: 0.5,
        borderRadius: 0.1,
        position: "0 2 -3",
        onClick: "console.log('Button clicked!');",
        src: "",
        eventName: "color-change-event",
        // for toggle button
        depth: 0.2,
        colorOn: "#4CAF50",
        rotation: "0 0 0",
        colorOff: "#F44336",
        handleColor: "#FBB550",
        textPosition: "0.3 0.01 0.02",
        state: false,
      },
    },
  },
  // {
  //   id: "11",
  //   type: "output",
  //   label: "Gui Button",
  //   class: "vue-flow__node-gui gui-components-color-cat-1",
  //   leftPanelCategory: "GUI Components",
  //   formType: "gui-button-component",
  //   descriptionType: "gui-button-component",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Add a GUI button to the scene. Customize text, colors, size, position.",
  //     id: "buttonId",
  //     type: "gui-button",
  //     category: "component",
  //     properties: {
  //       text: "Start",
  //       color: "#E9EAEC",
  //       textColor: "#333652",
  //       borderColor: "#333652",
  //       width: 2,
  //       height: 0.5,
  //       borderRadius: .1,
  //       position: "0 2 -3",
  //       onClick: "alert('Button clicked!');",
  //       src: "#",
  //     },
  //   },
  // },
  // {
  //   id: "11",
  //   type: "output",
  //   label: "Gui Toggle Button",
  //   class: "vue-flow__node-gui gui-components-color-cat-1",
  //   leftPanelCategory: "GUI Components",
  //   formType: "gui-toggle-button-component",
  //   descriptionType: "gui-toggle-button-component",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Add a GUI button to the scene. Customize text, colors, size, position.",
  //     id: "toggleButtonId",
  //     type: "gui-toggle-button",
  //     category: "component",
  //     properties: {
  //       width: .3,
  //       height: 0.3,
  //       depth: 0.2,
  //       colorOn: "#4CAF50",
  //       colorOff: "#F44336",
  //       textColor: "#000",
  //       handleColor: "#FBB550",
  //       textPosition: "0.3 0.01 0.02",
  //       position: "0 5 -3",
  //       state: false,
  //       src: "#",
  //     },
  //   },
  // },
  {
    id: "11",
    type: "input",
    label: "Slider",
    class: "vue-flow__node-gui gui-components-color-cat-1",
    leftPanelCategory: "GUI Components",
    formType: "gui-slider-component",
    descriptionType: "gui-slider-component",
    deletable: true,
    data: {
      description:
        "This slider allows users to adjust values within a specified range, enhancing interactivity within the VR scene.",
      id: "sliderId",
      type: "gui-slider",
      category: "component",
      properties: {
        min: 0,
        max: 100,
        step: 1,
        value: 25,
        width: 2,
        height: 0.05,
        handleColor: "#4CAF50",
        trackColor: "#888888",
        fillColor: "#00FF00",
        textSize: 2,
        textColor: "#000000",
        textPosition: "-1 -0.1 0.01",
        position: "0 1.6 -3",
        src: "#",
      },
    },
  },
  {
    id: "6",
    type: "output",
    label: "Change Color",
    class: "vue-flow__node-function properties-color-cat-1",
    leftPanelCategory: "properties",
    formType: "color-change-function",
    descriptionType: "color-change-function",
    deletable: true,
    data: {
      description:
        "Add this node to change the color of an object on click or hover. Customize the target, event type, and new color.",
      id: "id",
      type: "color-change",
      category: "function",
      properties: { src: "#", type: "click", color: "#00FFFF" },
    },
  },
  {
    id: "6",
    type: "output",
    label: "Change Position",
    class: "vue-flow__node-function properties-color-cat-1",
    leftPanelCategory: "properties",
    formType: "position-change-function",
    descriptionType: "position-change-function",
    deletable: true,
    data: {
      description:
        "Add this node to change the position of an object on click or hover. Customize the target, event type, and new position.",
      id: "id",
      type: "position-change",
      category: "function",
      properties: { type: "click", position: "2 3 -3", src: "#" },
    },
  },
  {
    id: "6",
    type: "output",
    label: "Change Scale",
    class: "vue-flow__node-function properties-color-cat-1",
    leftPanelCategory: "properties",
    formType: "scale-change-function",
    descriptionType: "scale-change-function",
    deletable: true,
    data: {
      description:
        "Use this node to change the scale of an object on click or hover. Customize the target, event type, and new scale.",
      id: "id",
      type: "scale-change",
      category: "function",
      properties: { type: "click", scale: "0.5 0.5 0.5", src: "#" },
    },
  },
  {
    id: "6",
    type: "output",
    label: "Change Rotation",
    class: "vue-flow__node-function properties-color-cat-1",
    leftPanelCategory: "properties",
    formType: "rotation-change-function",
    descriptionType: "rotation-change-function",
    deletable: true,
    data: {
      description:
        "Use this node to change the rotation of an object on click or hover. Customize the target, event type, and new rotation.",
      id: "id",
      type: "rotation-change",
      category: "function",
      properties: { type: "click", rotation: "45 45 45", src: "#" },
    },
  },
  // {
  //   id: "6",
  //   type: "output",
  //   label: "ChangeColour",
  //   class: "vue-flow__node-function properties-color-cat-1",
  //   leftPanelCategory: "properties",
  //   formType: "function-changecolor",
  //   descriptionType: "function-changecolor",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "id",
  //     type: "function",
  //     category: "changecolor",
  //     properties: { src: "#", type: "click", color: "#00FFFF" },
  //   },
  // },
  // {
  //   id: "7",
  //   type: "output",
  //   label: "ChangePosition",
  //   class: "vue-flow__node-function properties-color-cat-1",
  //   leftPanelCategory: "properties",
  //   formType: "function-changeposition",
  //   descriptionType: "function-changeposition",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "id",
  //     type: "function",
  //     category: "changeposition",
  //     properties: { src: "#", position: "1 1 1", type: "click" },
  //   },
  // },
  // {
  //   id: "9",
  //   type: "output",
  //   label: "ChangeScale",
  //   class: "vue-flow__node-function properties-color-cat-1",
  //   leftPanelCategory: "properties",
  //   formType: "function-changescale",
  //   descriptionType: "function-changescale",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "id",
  //     type: "function",
  //     category: "changescale",
  //     properties: { src: "#", scale: "1 1 1", type: "click" },
  //   },
  // },
  // {
  //   id: "8",
  //   type: "output",
  //   label: "ChangeRotation",
  //   class: "vue-flow__node-function interactions-color-cat-1",
  //   leftPanelCategory: "interactions",
  //   formType: "function-changerotation",
  //   descriptionType: "function-changerotation",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "id",
  //     type: "function",
  //     category: "changerotation",
  //     properties: { src: "#", rotation: "0 360 0", type: "click" },
  //   },
  // },
  // {
  //   id: "10",
  //   type: "output",
  //   label: "Drag&Drop",
  //   class: "vue-flow__node-function interactions-color-cat-1",
  //   leftPanelCategory: "interactions",
  //   formType: "function-collider-check",
  //   descriptionType: "function-collider-check",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Use this node to enable drag-and-drop functionality for objects by connecting it to the desired object node.",
  //     id: "id",
  //     type: "collider-check",
  //     category: "collider-check",
  //     properties: { src: "#" },
  //   },
  // },
  // {
  //   id: "10",
  //   type: "output",
  //   label: "Position Listener",
  //   class: "vue-flow__node-function",
  //   leftPanelCategory: "interactions",
  //   formType: "position-listener-super-hand",
  //   descriptionType: "position-listener-super-hand",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "position-listener",
  //     type: "position-listener",
  //     category: "super-hand",
  //     properties: { src: "#" },
  //   },
  // },
  // {
  //   id: "10",
  //   type: "output",
  //   label: "Supper Hand",
  //   class: "vue-flow__node-function interactions-color-cat-1",
  //   leftPanelCategory: "interactions",
  //   formType: "hand-controls-setup-component",
  //   descriptionType: "hand-controls-setup-component",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Use this node to set up hand controls for VR interactions. Connect it to the object node you want to control. Customize the properties for the desired hand control functionality.",
  //     id: "hand-controls-setup",
  //     type: "hand-controls-setup",
  //     category: "component",
  //     properties: { src: "#" },
  //   },
  // },
  // {
  //   id: "11",
  //   type: "output",
  //   label: "Gui Button",
  //   class: "vue-flow__node-gui",
  //   leftPanelCategory: "functions",
  //   formType: "button-button",
  //   descriptionType: "button-button",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "buttonId",
  //     type: "button",
  //     category: "button",
  //     properties: {
  //       position: "1 1 ",
  //       color: "#24CAFF",
  //       src: "#",
  //     },
  //   },
  // },
  // {
  //   id: "12",
  //   type: "output",
  //   label: "Control panel",
  //   class: "vue-flow__node-gui",
  //   leftPanelCategory: "functions",
  //   formType: "control-control",
  //   descriptionType: "control-control",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Use this node to add a control panel to the scene. Customize its properties like color, position, width, height, and opacity for a tailored control interface.",
  //     id: "base",
  //     type: "control",
  //     category: "control",
  //     properties: {
  //       color: "#212121",
  //       position: "0 2.5 -5",
  //       width: "4",
  //       height: "5",
  //       opacity: "0.5",
  //     },
  //   },
  // },
  // {
  //   id: "13",
  //   type: "output",
  //   label: "Gui Slider",
  //   class: "vue-flow__node-gui",
  //   leftPanelCategory: "functions",
  //   formType: "slider-slider",
  //   descriptionType: "slider-slider",
  //   deletable: true,
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "id",
  //     type: "slider",
  //     category: "slider",
  //     properties: {
  //       color: "#8c8b8b",
  //       colorthumb: "#2f7ed8",
  //       position: "0 1 -5",
  //       positionthumb: "-0.9 0 0",
  //       width: "2",
  //       height: "0.2",
  //       widththumb: "0.2",
  //       heightthumb: "0.4",
  //       src: "#",
  //       srcthumb: "#",
  //     },
  //   },
  // },
  // {
  //   id: "14",
  //   type: "output",
  //   label: "Controller",
  //   class: "vue-flow__node-gui",
  //   leftPanelCategory: "functions",
  //   formType: "component-controller",
  //   descriptionType: "component-controller",
  //   deletable: true,
  //   position: {
  //     x: 250,
  //     y: 150,
  //   },
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "controller",
  //     type: "component",
  //     category: "controller",
  //     properties: {
  //       id: "controller",
  //       name: "robo1",
  //       color: "yellow",
  //       width: "4",
  //       height: "5",
  //       position: "-1.5 0.5 0.5",
  //       rotation: "0 360 0",
  //       jInit: "atan2(Y|X), 0, 0",
  //       opacity: "0.5",
  //       transparent: "false",
  //     },
  //   },
  // },
  // {
  //   id: "15",
  //   type: "output",
  //   label: "Robot Controller",
  //   class: "vue-flow__node-gui",
  //   leftPanelCategory: "equipments",
  //   formType: "controller-component",
  //   descriptionType: "controller-component",
  //   deletable: true,
  //   position: {
  //     x: 250,
  //     y: 150,
  //   },
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "controller",
  //     type: "controller",
  //     category: "component",
  //     properties: {
  //       id: "controller",
  //       name: "comp1",
  //       color: "yellow",
  //       position: "-1.5 0.5 0.5",
  //       rotation: "0 360 0",
  //       jNames: "'joint0', 'joint1', 'joint2'",
  //       jInit: "atan2(Y|X) , 0 ,0",
  //       src: "",
  //     },
  //   },
  // },
  // {
  //   id: "16",
  //   type: "input",
  //   label: "Robot",
  //   class: "vue-flow__node-gui",
  //   leftPanelCategory: "equipments",
  //   formType: "robot-component",
  //   descriptionType: "robot-component",
  //   deletable: true,
  //   position: {
  //     x: 250,
  //     y: 150,
  //   },
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "robot",
  //     type: "robot", // Name of the A-Frame Component
  //     category: "component",
  //     properties: {
  //       id: "robot",
  //       name: "robot1",
  //       color: "yellow",
  //       position: "-2.5 0.5 0.5",
  //       rotation: "0 360 0",
  //     },
  //   },
  // },
  // {
  //   id: "17",
  //   type: "",
  //   label: "Add New",
  //   class: "vue-flow__node-gui",
  //   leftPanelCategory: "custom",
  //   formType: "comp_name-custom",
  //   descriptionType: "comp_name-custom",
  //   deletable: true,
  //   position: {
  //     x: 250,
  //     y: 150,
  //   },
  //   data: {
  //     description: "New component.",
  //     id: "new",
  //     type: "comp_name", // Name of the A-Frame Component
  //     category: "custom",
  //     properties: {
  //       id: "new",
  //       name: "Node:",
  //     },
  //   },
  // },
  // {
  //   id: "16",
  //   type: "input",
  //   label: "Robot",
  //   class: "vue-flow__node-gui",
  //   leftPanelCategory: "equipments",
  //   formType: "robot-component",
  //   descriptionType: "robot-component",
  //   deletable: true,
  //   position: {
  //     x: 250,
  //     y: 150,
  //   },
  //   data: {
  //     description:
  //       "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
  //     id: "robot",
  //     type: "robot", // Name of the A-Frame Component
  //     category: "component",
  //     properties: {
  //       id: "robot",
  //       name: "robot1",
  //       color: "yellow",
  //       position: "-2.5 0.5 0.5",
  //       rotation: "0 360 0",
  //     },
  //   },
  // },
];
